var util = require('./util.js'),
    fs = require('fs'),
    path = require('path');

exports.create = function(path) {
  return new Album(path);
};

function Album(albumPath) {

  var photos = null;
  var self = this;

  this.name = path.basename(albumPath);

  this.photos = function(options, callback) {

    try {
      util.validatePager(options);
    } catch (err) {
      return callback(err);
    }

    if (photos != null) {
      return callback(null, util.page(photos, options));
    }

    photos = [];
    fs.readdir(albumPath, function(err, files) {
      if (err) {
        // Error handling
        if (err.code == 'ENOENT') {
          callback(noSuchAlbum());
        } else {
          callback(err);
        }
      } else {
        (function iterator(idx){
          if (idx >= files.length) {
            return callback(null, util.page(photos, options));
          } else {
            fs.stat(albumPath + '/' + files[idx], function(err, stats) {
              if (err) {
                callback(err);
              } else if (stats.isFile()) {
                photos.push({
                  filename: files[idx],
                  description: files[idx]
                });
              }
              iterator(idx + 1); // recursion to iterator
            });
          }
        })(0);      
      }
    });
  }

  this.rename = function(newName, callback) {
    var newPath = path.dirname(albumPath) + '/' + newName;
    fs.rename(albumPath, newPath, callback);
  }
}

Album.prototype.name = null;
Album.prototype.path = null;

function noSuchAlbum() {
  return {
    code: 'ENOSUCHALBUM',
    message: 'The specified album does not exist'
  };
}